@using Microsoft.AspNetCore.Identity
@using System.Globalization
@using Microsoft.AspNetCore.Localization;
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options;
@using SDLV1.Resources;

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@inject LocalizationService localizationService

@inject IOptions<RequestLocalizationOptions> ioOptions
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = ioOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .ToList();
    var isRTL = CultureInfo.CurrentCulture.Name.StartsWith("fa");
}


<ul class="navbar-nav" dir="@(isRTL ? "RTL" : "LTR")">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title=@localizationService.GetLocalizedHtmlString("Manage")>@localizationService.GetLocalizedHtmlString("Hello") @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">@localizationService.GetLocalizedHtmlString("Logout")</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">@localizationService.GetLocalizedHtmlString("register")</a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">@localizationService.GetLocalizedHtmlString("log in")</a>
    </li>
}
</ul>
